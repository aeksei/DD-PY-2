{
  "course_version" : 1,
  "environment" : "unittest",
  "summary" : "Курс об основах объектно-ориентированного программирования на языке Python",
  "title" : "Основы объектно-ориентированного программирования",
  "programming_language" : "Python",
  "language" : "ru",
  "course_type" : "PyCharm",
  "vendor" : {
    "name" : "Алексей Первушин"
  },
  "items" : [
    {
      "id" : 278018,
      "title" : "Основы ООП",
      "items" : [
        {
          "id" : 834199,
          "title" : "Практические задания",
          "task_list" : [
            {
              "id" : 3492689,
              "name" : "task1_Glass__init__",
              "files" : {
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                },
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [
                    {
                      "offset" : 144,
                      "length" : 44,
                      "possible_answer" : "z6rQLE+TSVCLpKFGmNkfNv9z6CUOWpUPeWBR5W7jokkLqDPukmitTevtGxkwc6M+EZWkaDYXpDfpObMM/vkCmuM53QrOQid1Z7Q8gCrooYtxZTJ1JC4TFNfkA6frWDnTvK7uc8Hs4/32M6WzVoVds3TxwfInxY8iVzyjSO+lzxICjVblx7sc4YPwsY5Ba+YX28anatDz/149ucUCSZmjcmKsG1J3C8+bifZvUMXNkIIrsI7szeTnWsLrTvehnDc2g30psOp2b5ZXQ3gIcjrzguMO8ROe62Bj65PQgE12BgpRTKommf80Vz0EhQ5s6QneGh9b+cV7xGyD/nrBq4V3H6fKAyeHU1feYSW6X3QbBDqfPZyRt7lRvDRpxv0CvwzNq+CUHPy+4D+bHBbMZA3x51r4flWj0fXusaPnnFMP4kthsdS9unFbVvBD3r2pR75IBnYjTxYQLTKSZ7cb7PD6i1+Nf/wB0/SostJqZ2o7m3zyiBnHSn+BjvhElN1oVqhT78DjZkoBOsAq7gQ+aUmCqxLKlRo6DZuf/5HxWnJsxrvzJoobSPPhupDRy48eGna0Zl2B2HKskkeTKRMl73yL1TiD2l/61ZhDBF1FK+RawC4=",
                      "placeholder_text" : "...  # TODO инициализировать объект \"Стакан\""
                    },
                    {
                      "offset" : 222,
                      "length" : 51,
                      "possible_answer" : "qSFP1t4hZuJxOUkAsw8vTwYfUD3caRk3OqwxEZ3bVdhTB/pstvrEpSvJiANf6K+eESeXiSXeUowUVU08GKjxl0bBBRqYV9/M+gS0PkXTej9zYlh0Xe81qvitlYijN93gDDXcLJZinasDzC8zzROKIPRCpInvWLGJWVQUJsgGl6Q=",
                      "placeholder_text" : "...  # TODO инициализировать два объекта типа Glass"
                    },
                    {
                      "offset" : 279,
                      "length" : 57,
                      "possible_answer" : "kqpTKekReKtv3bEWh1mXm0lDtCfnJQDGH0eSGoaofPvx52yUVOYdvRy1/tTjWjV65Fo4mI5mG/fzNat45uJRQf5eg4NtRFn2qQfNnIlhsVo=",
                      "placeholder_text" : "# TODO попробовать инициализировать не корректные объекты"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "tJu0Wn36hpN60v2tw5RY9KifMhRnFuUQAT9nME9LM/bM/4Wp/8q9KBdZoMScHCBFMkMEP1KuZKmQKnB/y0jdoIY0cKBQF6AJ8Y2pazEJcL5fn49RcVekBQsladtrdGmpK6JSlDcry7z+LRZjF53Iq0iyRkSR1MBEduAY2Atdbti0kJ0C2EwR/Xbeqsxaj7EfMKeThyG+WDP1SF7Dc+8HEtTIgStKPEAMeHrEaHQZ0L6lXCi9oVGkeMrJad+MDIIngyRlHV1zaRnwSEM5RSi2cumRaSfVuG1Ix5FRzAysS2N1cHN7uQJt+R5xrQdloyLEkgw+jZioDLA17MryRT1id3IkM7w3G5y4N4eE25+SdfTN57g5fWV5pAj6aZNCeoaBTNic4FdhahFKhPG4ilbNLcBdePez3jiNs+Rna5QpFDJhz2eUQjAANRHitezVmtoaTbdOBrFRnvB1SPn7TOLQnnWvoPECUG0cZGEgfGeSPnBSr2SFoemvRBTL6a+qkeUeZgL7sjmZYzK9E8Y1Nesms9ttFCaD33OYVtPQSP86cMlv+LZvwdcWmALQ8nLZZ8eusU0svHVH5uLqP2BlmWKsKA=="
                }
              },
              "description_text" : "1. Создайте класс Glass с атрибутами `capacity_volume` и `occupied_volume`\n Обязательно проверяйте типы (`TypeError`) и значения передаваемых аргументов (`ValueError`)\n\n2. Создайте два объекта типа `Glass`.\n \n3. Попробуйте инициализировать объекты с некорректными типами и значениями аргументов.\n",
              "description_format" : "MD",
              "task_type" : "theory"
            },
            {
              "id" : 3503505,
              "name" : "task2_Glass_attrs",
              "files" : {
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [
                    {
                      "offset" : 724,
                      "length" : 44,
                      "possible_answer" : "1hSqUxydeBvfFRkSr1NUHA54poCBl/oeINVxT7Ut0z+5eeZJF0kL0UCUA55HZzyGqrQ0v1jcUEfEtXsW6OlI/g==",
                      "placeholder_text" : "...  # TODO инициализировать ещё один стакан"
                    },
                    {
                      "offset" : 779,
                      "length" : 51,
                      "possible_answer" : "OjVFhxfeB66Ovkgegyf3Pm1tuALXEpgaePhjzNUk0T8groVcjWrn5xph2J98aseL",
                      "placeholder_text" : "...)  # TODO распечатать атрибуты экземпляра glass2"
                    },
                    {
                      "offset" : 882,
                      "length" : 37,
                      "possible_answer" : "ZtQUpgW6olhPqiE52pR6+9DrWh4ctfJIhJt09OIpB1U=",
                      "placeholder_text" : "#  TODO доливаем воды в первый стакан"
                    },
                    {
                      "offset" : 1041,
                      "length" : 28,
                      "possible_answer" : "1zSzkgMVd5xYelqp57cn1jcuNaXjsNaPfzWflJn4Jcg1OA//nlJ7NpYxQK0gpNJnr4026HYfWjuOdm2jJG+hpYbin+wfyDTRAQAUb0l7JNLRX768jsW18oa/zLB2Wpl7",
                      "placeholder_text" : "#  TODO сравнить id объектов"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "tJu0Wn36hpN60v2tw5RY9KifMhRnFuUQAT9nME9LM/bM/4Wp/8q9KBdZoMScHCBFMkMEP1KuZKmQKnB/y0jdoIY0cKBQF6AJ8Y2pazEJcL5fn49RcVekBQsladtrdGmpK6JSlDcry7z+LRZjF53Iq0iyRkSR1MBEduAY2Atdbti0kJ0C2EwR/Xbeqsxaj7Ef0ZJPka6EfgAYatwN+3xx7w7hLI8bJBK0LAPqnQD7j+N8aH1o02xdnpTWzt51+fi0fHk5CklWoxV368SjpjLWJZ8b+w38xxuCbed7ST4swtPoJFT3OKTKEsPJHVBolYOtR1/y66Mj6fjBoQZ3QU7LfEoqJYc9T1FYuVTZDZZfhQYPO5eBFBRLitM+BSitgSjptC/hiWAUjvFulq8MSjDihbf5mWQSqtpW8WROZ3y1W1xifFvHRsJ91X9RScZXsawI9A8fYVRcOZbJqQSvg6+Jk7tFKyfLBdMWCTGDQThPWHoKpZk8lZ3yK6Jb1H431SE0AKVxS4RbVP5vVzB4VY6edXs8KawtpA5klLJRQfO6UlnxOU4/IJ+278jr/symlIWmvH4IXL+u1lm+xj6sh6xGkfpZgpfzS8Mvb/0TDCjCMDcWZN/kpZdvy+oNF85TWqmpfGR7lhlm7Z6TU2TF4mvgDDPvBLPkSvbvw42XTKnBtMQpZ0P0d99LvjjAfPERYelOYXLvBG76l466rSi3kFxS8BF1wSPGOFD66qMs7fITXpFP60ubUlQzuByh+gxT1XiZ4Y9Pt9SkGJU6imEjaSE8l+X9EJiddRp/w2wFTH/4m7kJ0pfuCG7ZUr7g2FmyCIFIcPiHktS9rBiQV8XZfnM9pNy3yDy9EtnyHpEyTguexKFMQ6iWvcImgk/9jsRBVmZTawUtSvjUHok2aIZnwVIQdosJ+4XknJ7VovPwSenOAAqtVZ+KaPAnrB2ftJU7l/weVt/5cNtl15zIbCVfKzHwYmNkldTxIDBiC0ILAW2vDRbCD6N9oJF1GOnQSsn+W/1zYu6OAThTSsS/lc9twHUdtDA0Ujo51rPXwb0rrhxXpujFqVroxudPE3rWnhLpV6FBvXRYVr8pP+6JsJRiMUU7/E3X/9X5XY/EKnnclrpt2zvYzw2JlJEXZJPbX2S98NTd9W88pGyRvL0rtvlY659dHuvGdpbUVTFgswj58h5b1lgBtgap4s5wb/dETye9C1C4FzsulGio8yUnNFN6C3UmOCdbc+aF+bypn+mhEho3nfsFjbzhvVzpaagTb6jLk5LfLnuoSMaItp5WiK4rQzbwsO67B0C1EzH/AJ/McIE6obA1aAjzdy1buXLSgziGTYQJuPXggugEzb+PsSsr6alrZre9HopJupq+HBU9wHHOg3/ndEOrk34Z3EPE0QjgVrPFVuKIzPHOJlNclwd6y3PNnLD3VE7t+ms5vU10Wp3EN2dWHVSiSP2CxpOhme4vhQqYLzTzcIxVMsS4I1Av/SxqC5KNjY/iY9PFgYL4IryJcP2uuTVHN7dm6R8TV5b+7v25612OiAKs9ztfl/xhvsVkILr8rlUQgUKu3t/xQUfz2DKDdmXakas/guD7nYj8QlORyetkuRdCawLD12+zWz7qloMQPPCH0rdnIu7bNmA8J3wp46egCMCdr5GLa2dg9+O5"
                },
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                }
              },
              "description_text" : "1. Создайте два объекта типа `Glass`. \n \n2. Измените и добавьте во второй стакан любое кол-во воды (через соответствующий атрибут).\n Убедитесь, что у других объектов `Glass` атрибуты экземпляра класса не изменились.\n   \n3. С помощью оператора `is` убедитесь, что glass1 и glass2 это разные объекты.\n",
              "description_format" : "MD",
              "task_type" : "theory"
            },
            {
              "id" : 3492691,
              "name" : "task3_Glass_method_outside_init",
              "files" : {
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [
                    {
                      "offset" : 144,
                      "length" : 240,
                      "possible_answer" : "m+ExRFeIIIrjQUkTSaOJO2gQzDEwl5RlZsSo3MwjjdYATgfCXxMyLmidUWw381r5qjQqOe0jElhdnNmSlT7VL0QOvF24n2Ps8clFxx9lm/g=",
                      "placeholder_text" : "#  TODO заменить на метод\n        if not isinstance(capacity_volume, (int, float)):\n            raise TypeError\n        if not capacity_volume > 0:\n            raise ValueError\n        self.capacity_volume = capacity_volume  # объем стакана"
                    },
                    {
                      "offset" : 609,
                      "length" : 77,
                      "possible_answer" : "kjF2+Qa6cUuPWDhXAzWuH3OczO8kjIyKXkgsGVt0Cikl/yJKArEsL8OGqQtbHLaRdj3lbN0h8GZiW1yWSlONcLBK0JwqKmRlrxIjKdKLzJUC0XQvjHvtIp9TZopef66JRqR2d2Z+jtyQ9ygmAoXWSHnuBF+XIM/1oX4VoBu/An6MNfYRdQpkmIL5lLU52svRvpLlQUEqcLpZPGOTnU2FpAXdTow/Q+fPKr3sZ1fskHk4H5w+NPa9+0otK6bfS1k4DiHAXfQy/vwKRUla75WNnTM+AY85wKzz/o/bgtnUMOVYYCH9kHMedXRUz+x7lsIFtvxB0SvXTEb77kUcdPPUksXnITOWY/S7qSn2SGKkeGEpcMz7cJJz3OAAR/aWoNsNlCEZO5c/oL5zhDlNPrkj0Q==",
                      "placeholder_text" : "#  TODO создать метод, который будет инициализировать атрибут capacity_volume"
                    },
                    {
                      "offset" : 720,
                      "length" : 51,
                      "possible_answer" : "YhHsdEctzKiKSx+QvGCEpT516xGYnhByA55gsLaGqPijFNdr3tDzZekIicCSyVAY5sW6724MtqAbHQ0pVZxwyA==",
                      "placeholder_text" : "...  # TODO инициализировать экземпляр класса Glass"
                    },
                    {
                      "offset" : 782,
                      "length" : 48,
                      "possible_answer" : "NB/OmwC2NrtUjqZ1Ud+qsaXQEYlZPBPlcTULg7OaJfg=",
                      "placeholder_text" : "...)  # TODO распечатать атрибут capacity_volume"
                    },
                    {
                      "offset" : 841,
                      "length" : 48,
                      "possible_answer" : "pfyAqw+qcUSltaw+D8RlVw4Jh8k9HzuaYMRtwRElmFc=",
                      "placeholder_text" : "...)  # TODO распечатать атрибут occupied_volume"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "tJu0Wn36hpN60v2tw5RY9KifMhRnFuUQAT9nME9LM/bM/4Wp/8q9KBdZoMScHCBFMkMEP1KuZKmQKnB/y0jdoIY0cKBQF6AJ8Y2pazEJcL5fn49RcVekBQsladtrdGmpK6JSlDcry7z+LRZjF53Iq0iyRkSR1MBEduAY2Atdbti0kJ0C2EwR/Xbeqsxaj7EfoF8U9qZhPVhK2LEDBqIaEB3GHuJIN0AmIZ/9Ll5qUnGb4xfFw1Bb7l0vR0Nynl5TKanw/MNcDxFyW0hgaKmqjCRDInJl5de5jLSkeUqWAIXH5NDCq1GcGl1+KkYm4X68289TJ4sg5f+24Izh+quifuzlwkGaxhUsUHTsaVM8t8hEgvw7ls3iq6oVf8Epxkb9c1GShrcBXDSEs4Fe+BJbbKcqPVCzxOPWNJmIV43ENVk+qzt44Wt9+u99zNsS0LucAkCixIrDkyy/wVvvmd8XfO0V0rs5yrH+jE6ejlKkGPw8xVeJGk9rx/37janryukuvpASyNWpNUJGjadD9SVPOTofkw03frYAZPDyfO1dCADsbKjMniCN4+w7SUCkDQdXsE+2+r9V9YMy44V4yXt6dxxOorCbWPY3yv+SYxieHK3Wj7F/hR5R3HcKBVDYoYivjefzumPNDmoaR/y4gO4AkfyCMIFAkm2Q4cnrxUUdA/Ez30n8+5ehparB3xuCl9TS6ScjJvUAXXvF69E7dioWEOnTkJY2UvWgJ+Z0+Nkl93VpiL5/S7ssu0T+5piU2IKLiQOouWVfuzXhjDQLi+hSue8G05q9QOaoVcqRtvqub6tKu56GexGdSKr/6aSZ5qFDnHtCGz/fNOCQ9H389wvpDgfz9ESCoXGnRIBROr4I5yyLbBzGB9+/bTYCvvTNT3RKRCgMceRVTzA3z7QCLKuPE6oGgXHybQgodu28VB8rO3N0g7m5roMFb0bGhjbYVi6lPUvp9rrOI7YNPoIqgj+Y5iXu3cH1LOnutPxokiUgaob5e9JUyJGehLBBxJvCE9h60/QDr2yCCf3mt//idavIzaL9WxwCMNkKRwjx3g7S0BVvcQn7/MJDELDTta0FLtQ0fnaNUrF91IqDk7b3IDBg2/LUaD8OZQkR3d2SU57uC9PAE+iwqlSL0rDxJDLYcUd2DOYSg7klmqOc4ifg0Cw70fkuQq3UIegdB9GbjNwInRbrDd8qR/BCA0uQIoBD3lys6s4QDMMH5p8QPoer2dMqASSJGvhvVRofNnJ/I65Yw5z6wg822yPHrrozi2mD7veL8lXPZ7rDXFNJJLr5qMFf4lYwkwPqe7LO3FTNIN9dduiU6jubY/mXrqqVpu0IGDXB9Z9QC/sFOCYDnwQFqqMIk0QEYKz7C0Pgt/oDNoxihx+tX62nZC1wuF5bGZ4LOuMQ"
                },
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                },
                "tests/output.txt" : {
                  "name" : "tests/output.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "ePVkh3Ez5qtNvY1c5hw4uw=="
                }
              },
              "description_text" : "1. Вынесите инициализацию атрибута `capacity_volume` в отдельный метод `init_capacity_volume`.  \nДля этого необходимо установить первоначальное значение атрибуту, например `None`, и вызвать метод,  \n   который будет инициализировать этот атрибут.\n   \n   ```python\n   from typing import Union\n   \n   \n   class Glass:\n       def __init__(self, capacity_volume: Union[int, float], occupied_volume: Union[int, float]):\n           self.capacity_volume = None\n           self.init_capacity_volume(capacity_volume)\n   \n           ...\n   ```\n\n1. Самостоятельно инициализировать экземпляр класса `Glass` с объемом 200 и количеством жидкости 100.\n1. Распечатать атрибуты экземпляр класса `Glass` `capacity_volume` и `occupied_volume`\n",
              "description_format" : "MD",
              "task_type" : "output"
            }
          ],
          "type" : "lesson"
        },
        {
          "id" : 834200,
          "title" : "Лабораторная 1",
          "task_list" : [
            {
              "id" : 3492692,
              "name" : "task1",
              "files" : {
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "bijN2g6W/06q+q1Hhgujb2/LL6BH965rEsqCNKDio7EuekxOY62GTJVk2fBMzwW2GRGg1DC6EAVqgNnt5nhgbLNQBy5/JR/s7HoE8YlgQd0rcd9B7xMhOg2vmgqoCJwMyy3H8gfEH4prH/CXcKc4u8nVDRrNEuJqhFtmRVKdr36lIOFFcA5JuraYG4s2dqJNP+VZ5E9ishN5JYU5T1TonwBLyjL5x4SHqaLKDlagoPuDHHraBVRqAT4vMuWwj8lCLAzbaGmlk48Om2VGQoh/Xe2ZNFYS5gqx3T6d0hNrKv1cM0N187yApyhVkNp0TFTxRqdh1SRO2UGjhWxmfh9nyWB4SE1UGRxxSuEPDR6pMOg="
                },
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                }
              },
              "description_text" : "1. Придумать и написать 3 абстрактных класса, описывающих любой объект.  \n   Каждый класс следует оформлять в отдельном модуле.  \n   Например, в качестве объектов могут выступать материальные сущности стол, дерево, и даже нематериальные стек, Facebook.\n    ```python\n    class НазваниеКласса:\n     ...\n    ```\n2. Для каждого класса выделить 2-3 характеристики и записать их в виде атрибутов.  \n    Если на аргументы конструктора накладываются какие-то ограничения, которые в реальной жизни не допустимы,  \n    то следует описать валидацию (проверку) этих аргументов. \n    ```python\n    class НазваниеКласса:\n        def __init__(self, arg1, arg2):\n            # Атрибутам присваиваются значения аргументов конструктора объекта\n            self.attr1 = arg1\n            self.attr2 = arg2\n    ```\n3. Сформировать для каждого класса 2-3 метода, которые будет описывать возможные действия с объектом.  \n   Реализацию самих методов писать не нужно, достаточно только названия.  \n   Если на аргументы накладываются какие-то ограничения, которые в реальной жизни не допустимы,  \n   то следует описать валидацию (проверку) этих аргументов. \n    ```python\n    class НазваниеКласса:\n        ...\n    \n        def method_1(self):\n            # Реализацию методов не нужно, достаточно только заглушки в виде троеточия\n            ...\n    ```\n   \n4. Каждый метод должен содержать документацию с описанием аргументов(если они есть) и возвращаемого результата(если он есть).\n5. Все аргументы методов и возвращаемые результаты должны содержать аннотацию типов.\n6. В документации должен содержаться как минимум один [doctest](https://docs.python.org/3/library/doctest.html) пример как пользоваться методом. \n7. Результат представить в виде ссылки на репозиторий GitHub, \n   а ещё предпочтительнее в виде Pull Request без указания reviewer.\n\n## Пример\n[Пример](https://github.com/hse-labs/DD-PY2-labs/blob/master/%D0%9B%D0%B0%D0%B1%D0%BE%D1%80%D0%B0%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F%201/example.py) верно оформленного класса\n",
              "description_format" : "MD",
              "task_type" : "theory"
            }
          ],
          "type" : "lesson"
        }
      ],
      "type" : "section"
    },
    {
      "id" : 278019,
      "title" : "Атрибуты и методы",
      "items" : [
        {
          "id" : 834201,
          "title" : "Практические задания",
          "task_list" : [
            {
              "id" : 3492754,
              "name" : "task1_system_user_attrs",
              "files" : {
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                },
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "zL7W4KZkS3wxWhAnHM8UZRFRDnealV1k1mNo/6vEeMtelaqkJDangrfVPP+tlpLyapOr5ikKtWL+6KKaM9hSvM8pzJGXL0W7HApT9D3cnAgS7HJT6R38Le54jgsUieMISQgzwER6fU3Ai/MaJeErdmpFEsj3jc5lsqGpO/mj6vgk2WDFNDQciWQGpo46XN+Zz+bnpPb1nM9n40rRegCc4bpHNmz+/kULRc6vA6gbPCVzq884e3aOlJLddOipUUYea6/Z2B1dGFvaKyEo4YVMjfcHNFQH3gOVATaFuZgB9lQRKYQx7ZNcDCuDIF36PcKqSUQ8TlRlQNIh8QDsTYZuUw=="
                }
              },
              "description_text" : "Атрибуты экземпляра класса делятся на системные и пользовательские.\n\nСистемные:\n- `__class__` - ссылка на класс, которому принадлежит экземпляр\n- `__dict__` - хранит все пользовательские атрибуты\n\n\nФункция dir пытается вернуть атрибуты указанного объекта.\n",
              "description_format" : "MD",
              "task_type" : "theory"
            },
            {
              "id" : 3492694,
              "name" : "task2_Glass__dict__",
              "files" : {
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [
                    {
                      "offset" : 144,
                      "length" : 130,
                      "possible_answer" : "VgleX7T6n+DDWniSGrG7vbF/ZZe5sINvfE/nUXYo7EXBxm9ruhtyjqoduXlFGZ0IBmATKPUj2v7cGzaA+NmP2v0B4oOCJ0BvJAgff3QreG2Sz2whxSRfvlKDmOyLCBM3LqCz8RkQ2KYs7k/+TiTBe6u5HFR0LIbNl7JlhpcKarjsiYDZrNmnqDsQJlK+irE657/rUEgu4b8XkQUJ85tyMvKDXQE0kRfvvYED7zNqDqNtilTqHlO6EAdy2LPp3rvtG7NkF+QlldAKL+uU3NcL1xFXw4WVAwbgxM4H6LLpvEQ=",
                      "placeholder_text" : "self.capacity_volume = capacity_volume  # объем стакана\n        self.occupied_volume = occupied_volume  # объем жидкости в стакане"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "tJu0Wn36hpN60v2tw5RY9KifMhRnFuUQAT9nME9LM/bM/4Wp/8q9KBdZoMScHCBFMkMEP1KuZKmQKnB/y0jdoIY0cKBQF6AJ8Y2pazEJcL5fn49RcVekBQsladtrdGmpK6JSlDcry7z+LRZjF53Iq0iyRkSR1MBEduAY2Atdbti0kJ0C2EwR/Xbeqsxaj7Eff5SKaTCdlLl2IHCIoGgT+sO6/yOu4kYf2n4goRs9DSK7/s780tLJWeQAkvKio4mFTPCsYV4lzxTzFhYm3upArvYsskad0Vo5fuBEMmL6P6OmFCuLBX9fQgWyJ+wqCLjT2ylSOn2i6NyfeRVLVix91ZekiXWoCYdonIvIioumc/jA3Dq/sRT6dtqtQEyQ2+pCB7KaTLokbEWy8YkHNfGH8jQgkaKfPuLZndjlbVZhtsLU6Y4OsC92mtjD1FugwqcfJirqNTRke51zSE5JM0dGSxoQXO3VF4TYyr9suSRmBgw="
                },
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                },
                "tests/output.txt" : {
                  "name" : "tests/output.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "1R5gxgVcjwlPoiy9AeShV8/kzOCBqTQbx762XPaVC03D/FKd7trO8a3NrvWo9oMu7xeEsKMYDum3pa9qQzb8qA=="
                }
              },
              "description_text" : "Распечатайте словарь атрибутов экземпляра класса в начале метода `__init__` и в конце `__init__`.\n",
              "description_format" : "MD",
              "task_type" : "output"
            },
            {
              "id" : 3492695,
              "name" : "task3_Glass__class__",
              "files" : {
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "zL7W4KZkS3wxWhAnHM8UZXX0ywblcL3Iqq5FftvLCblWt4djFh1Kgma30lXidSXLtQ8vXzfaaUQ5zPfGLdxSZGkbjnI9SDZcm3G82EQcv16mozLHyfRcjCSFzGMm2kJZZ7hTu2laPFC2D5XwoG5wH/0FbT3WTTApLFz4WWx0oAc2LoNz+gM1vy0j/JrR6cNR1DFViHQBDrVDZv6r2dYfGw/zFhyV3xundGh5XxLc7zM="
                },
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                },
                "tests/output.txt" : {
                  "name" : "tests/output.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "ktnqggLFYHdijA4D5bJDkXFba2Dsyq9b8v7UqnsVJF3ZBojX65AIJTLrIAZ+BLwEu3LLLHBbPq9Ax16e+vANTw=="
                }
              },
              "description_text" : "Системный атрибут `__class__` содержит в себе класс, экземпляром которого он является.\n\nСодержимое этого атрибута эквивалентно тому, что возвращает функция `type()`\n",
              "description_format" : "MD",
              "task_type" : "output"
            },
            {
              "id" : 3492696,
              "name" : "task4_Glass__class__name__",
              "files" : {
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "tJu0Wn36hpN60v2tw5RY9KifMhRnFuUQAT9nME9LM/bM/4Wp/8q9KBdZoMScHCBFMkMEP1KuZKmQKnB/y0jdoIY0cKBQF6AJ8Y2pazEJcL5fn49RcVekBQsladtrdGmpK6JSlDcry7z+LRZjF53Iq0iyRkSR1MBEduAY2Atdbti0kJ0C2EwR/Xbeqsxaj7Eff5SKaTCdlLl2IHCIoGgT+sO6/yOu4kYf2n4goRs9DSK7/s780tLJWeQAkvKio4mFTPCsYV4lzxTzFhYm3upArvYsskad0Vo5fuBEMmL6P6OmFCuLBX9fQgWyJ+wqCLjT2ylSOn2i6NyfeRVLVix91ZekiXWoCYdonIvIioumc/jA3Dq/sRT6dtqtQEyQ2+pCB7KaTLokbEWy8YkHNfGH8i/wUSTTLB2pZc9HNv13r1UFavl/yNuS8nS7aQiYkusBeBRJz3TigAO0+p1J8DFqr5oR89q+UQx9zKRQrCae5Ep70nz6wg0K84UzjtiEyRQ0/LxYecsYU3jee09oObBl6yMtnH45a0lelkdfeGwpRZrOkrbETP529pnF0uLIW2g6F6YIf7ihDg1K0mz5pqxAsNm7YZ40rnKRzHa6hqVEhvBKUGMZ+/1IcWY04Q3dRPA9gszp2yJJZ+bIn5eKh/S68yhqEYR7Ak4j6LE/DhHTlMKYSNJmQjZFy61Sl46aAY8qiD1sJFMKq41CuWSh/eXkmNWLYLlL6GgfPKTrdzJyx9c64AcIlog3Pgq4L5JZZ+9G4lDscrJjWySWpgvg7oBe6sFIzako16GrUUsPglgwyWEYduYeEJ95wuouiz375xWd"
                },
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                },
                "tests/output.txt" : {
                  "name" : "tests/output.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "XBjwiL6wCI6W487moHi54ldRXMLRAb7VsplRbK2t7OQ="
                }
              },
              "description_text" : "Системный атрибут `__class__` содержит в себе класс, экземпляром которого он является.\n\nС помощью этого атрибута, например, можно сделать метод `__repr__`",
              "description_format" : "MD",
              "task_type" : "output"
            },
            {
              "id" : 3492697,
              "name" : "task5_Figure_classmethod_staticmethod",
              "files" : {
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [
                    {
                      "offset" : 99,
                      "length" : 330,
                      "possible_answer" : "Jf4Kb45GpU3wg3Vfotj0h7J4rTd64DsYQ1jAr/8YvWgYXpSoAFRAsSe/qUsH0hpVqwHTEippYhjskrfCYi4H3a7lYmxO3JpieCNskXWzyAqNsNWf1k2iOXQrt1qDc09wscHbZkZGYKCCaXKHTbdH+XJt6n4dmXifkvm5S9i9galaQppmmPa0upPnfvJPplb3nYmEFBu50KQUwAtygc+Gd9XiU1Tnh5jB3POEBh6XjDv8DbY7EYW0q/bn0iU8IquVgDIj3KmyRujARMX+KWTKcNjVMuJq1UQ9n06DMtg55FFXNwpo18Mg9n943zABQpmZrNacuHKENyyqkSMF3GpFRsHqsIj4o8aKrjy4LRSRK/c7knIx/lcQ816qVflsrEIzut+5n7s64VSudfN22QX5MGU08Qza2im0xR0yVl+74DyH5bTLvtWGZgv3tZKPT6UdufJBXTOLN3kyohzJz7J6lcX2UvHaXpurtdWgDPXmkzxwbTsfIZ0uIVAg9913jEbPKR/lsitvQs/15ZjRVFAlZQ==",
                      "placeholder_text" : "# TODO сделать методом класса\n    def area(self, *args):\n        \"\"\"\n        Метод, который считает площадь по разным формулам,\n         в зависимости от количества переданных аргументов.\n        \"\"\"\n        if len(args) == 2:\n            self.area_by_height(*args)\n        if len(args) == 3:\n            self.area_by_angle(*args)"
                    },
                    {
                      "offset" : 435,
                      "length" : 73,
                      "possible_answer" : "pwFbB9Hx7bc+hT8laMyVFLCMXgQk62Rv3YoG1qq7OLBp1Q9acfSd5n0qcGiNq+4l7i/gfBRCU9F9ciVFscfBUg==",
                      "placeholder_text" : "def area_by_angle(self, a, b, angle):  # TODO сделать статическим методом"
                    },
                    {
                      "offset" : 627,
                      "length" : 67,
                      "possible_answer" : "pwFbB9Hx7bc+hT8laMyVFKMTH13NH6GisDS5Ni/YO/5YR/ng62kt/WXNa9A39RzS",
                      "placeholder_text" : "def area_by_height(self, a, h):  # TODO сделать статическим методом"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "lAlPuuBYzpUeTc2R2ddhk+Ry6TptWi2eZCpspB+uz3actejZgCZ1hSXCNydacGfOd9i2seQa7FGgSV8VvMxB9yEDRqrHEwqTBjDxszXllYFGb9BoBuKx0byJ1sTZwWmmRhEsRTT4laBt0T0cFsdDS6H3RJCQLwkHOwidyRYcpFdiRGJoOSu6VVlKxou0D129USGJNag6c/MaU568+8dU4aUGnhb6+FVUAQyek+SBOGwuUgdNW7VP5dooW+XJBl4CdxTYCXaEH4jvwDk7nkQdRq5q8kc0rO8t5XJ5anhK1IGYIehGx85Zp7Oc4fe1yL0E3u4JKQGEywWG0F3lh4enllC50Y/HEVYG25PzyULSdPemg3dTpb0X3xvOcHdQYYhxou+Pjgy4t23D45F+fBZcGksOMxMdXanzVWm6yfhnuCba8IPd0ZfEVr/rmU5iBxrTcNgxvyoduyFgchZlASkVe8qsFttiAsbSSKuFdU2vwRUuPW4CfQSEscHYuN+ofhScfYsVSz6lVW7wYOWFduDCf1odkAUi5JNdCeGSvUmwwLeK8JV4gLEmiyv3/asFSYlQOsKsDoqKWQNtbDKQbagGbIXBZVwDmjtXickkDu5mFav+SsedwwRnwvt5WIZJOWcS0zdLRf+w4kBa/fHJA3Fojes0TQd8UxOQ5eahLBTdPghlt0UkKEM3ZDKGK1L4R+evj4umC3SgVNcrw9Yo4h+uKFfqtFHSsE6CqiSZH96W7wNlHXX6m0Sa7YoPOiIZgaa7K9lKPwFzgxcQ3McaFualBeDPJkkdDTGUjMfsDK8CdDQEkHgMDVwsrRQt305naGaCz0tHBldQ2OEMPlAVcfW62q/9PARjTFeQFLELTZ3jnvo6N5SpigZ+/aDqifgqf6j0XbX6aKgAlIBojYV3bSbwB5TuGVgOd5R1YXUYAIf0jRONX+Iben3QRWEL5PWs5E+6c8U6+Ez2S4pzXYu3LOYzYcRMEDWSrbfRJADhneHg5IHYMatTqHuGiamgyeAaqfHkWmStyk8w9bwoaNBMUR0zvOEyMKH8RSBGJxoz0RBlk1JaljJ1lPFCKk1qoYCNepzpewRmybSWAyHFHszbFlrFO4STOfZkrqGyd/sUtnr7S4/ciLDexyPmVAQLcET/+WGSbXYBHnwjTMz/tMFhXakes1dOPqh9Zx05K9mQFfYDOVaOX59wvLrX3y44nN3dstKXkRkLyrAYdYpaM4BkLiV+PKx7U6NpVM0e47UO/8Biwzitp4mWmGeq9nhRKjXzCnCwzAvbMbemT8lXnmxLXs5eNxmrr5xGVXcVXg+XGzNi/vtu2y0OZdzuiZL2amv+mA4fVcMkY+I6Jdk+fao+75FxEkF4/QddV2Q+L+MnsjoP1+w7ZToAVnujCKxMVzoV48XPC1OxElGwVrdd0kczyipQsi+gQ6ypqqJbGD8XKNrZBDzV+Dyibn/XN6uzgBT0UYN/39odjUymF+dgZjLIqlfzMYTjmfH81hjPqpIy8h5/YzYCLyTZ6rR1Q9OQLzhlwjVzk23R3p66DhNVdO9XAA75wN3sCD+AUIoGn5ofh/3RDYYV5ObaudeEMNN9ZTMdFYM4evjp2tJyIQKVFL5xyGHLcCfIKqbspbVJHvwSdhH0HO3SQV9dx3FzNTSw9j2ZdpXalGA0xapY94Vz09MDsJiFNgsmsdtDrQfpxcdfg59I3PZ4wJU7XmA/AqDiElQaUvwhHeu7TtPrG8Nmn6ANHMM9rPXIMAnRSg7jQqTB3L6CqdbmGW1YWUZS2F7xqAjTY9zlzFtWaDvsJbfHp3BZ2ba0ekd2jbWihpNxznmZiC73nAOqf07VYJxZpb/5JKnRer08FtywPVLLn1zoO44ri+1b/oV7T0Mk5j4fIUyRJ2nn1cU="
                },
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                }
              },
              "description_text" : "Предположим есть некоторый класс, который умеет считать площади треугольников.\n\n1. Какие методы вы бы сделали методами класса?\n2. Какие методы вы бы сделали статическими?\n\n\nПереход от методов экземпляров к методам класса и статическим методам менее \"безболезненный\" и \nне требует переписывать код программы.  \n\nА вот обратный процесс перехода от методов класса и статических методов обратно к методам экземпляра \nне обходится так гладко.\n",
              "description_format" : "MD",
              "task_type" : "theory"
            },
            {
              "id" : 3492698,
              "name" : "task6_Calculator",
              "files" : {
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "4KFk+qpVRwyk08I4n7KlKE4NbpccyDu1IrOS6536bNLOIZtGw/6qHlDHU9QqZoyT9v6JlvSHL1EZgQxXQJzP1vnBKBwFhzwzU1pTJHVBDERXXMojCwQM5Ngxkzbru2S2Yq6i6gC2fTJTDsDT4j79xHAsiLZmQMoxGlkn1Y+a1vf3vcNN/87tCRQsKp6ewVvtJNyOmDMIwxmnNUYs9UtM5HAPTmOLRCqG9M/EfyumX6lcSgo5ax9+SOtYelIgGqqBWIWFeVmkmFgSSLizir11bw=="
                },
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                }
              },
              "description_text" : "Написать класс калькулятор, который будет реализовывать два статических метода: сложение и умножение двух чисел. ",
              "description_format" : "MD",
              "task_type" : "theory"
            },
            {
              "id" : 3492699,
              "name" : "task7_Date_classmethod_staticmethod",
              "files" : {
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [
                    {
                      "offset" : 513,
                      "length" : 29,
                      "possible_answer" : "uzrm+moJQWWaCu0ilaM2ow==",
                      "placeholder_text" : "...  # TODO реализовать метод"
                    },
                    {
                      "offset" : 685,
                      "length" : 103,
                      "possible_answer" : "uzrm+moJQWWaCu0ilaM2ow==",
                      "placeholder_text" : "...  # TODO используя атрибут класса DAY_OF_MONTH вернуть количество дней в запрашиваемом месяце и году"
                    },
                    {
                      "offset" : 913,
                      "length" : 37,
                      "possible_answer" : "uzrm+moJQWWaCu0ilaM2ow==",
                      "placeholder_text" : "...  # TODO проверить валидность даты"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "/GtpIvOsP7R5DTr/tFGyq315ApeeA2bs8//jHWcu95M6u60VUsIt4KhtYBjF6iDK0wqVezL/zeXpONwdr8QWgP5aS1oYtOHeuruA8jGy54R8mlEvGnuLVh15HYHLPwl6R1+tD8t1kHbSfpMbhOj+yRaNTMUShgzm0Et0gl91EJ4HpvBJfjFfUio4+lk2LtmjBAGISqPj8UD8GnHvWFl4qVawPBD6vpYdjGrvvlry1PlbRTsnAQBbnNX5pwaBZ3/XvvhDGaoc5n51+myfbBCTrh8tQklpAQral9lyYZlxFOV2+NwkY0U6dncpG9afGPxM4bMVWb2PbSbwuZANDmYOQVcjpzL5cfbaL2FwE6uuVzsZcZM9xyz7Oi39aS0mdgcLoIzxzQIxltFmTiPxTGSfKDxZtbz9G2Dv9j4o4dgjulDezL+i2JawhG3O6XOcRZHYOtYUK0MbQbxdw72cBuCrU+P008WW4xWkm6JAiiBHyapR8tpQay2Pj9IRNUuoaXQwW06s6UGAt75f/pUalD1MSVnzbqLWZ5X3c4dWedpKUN72yKtqvbZc53qznyhnSoWyGYZy0ULtIz5LM8liJAZbk8wTvlihP8GucBx6nIGVN2+BVSZqc9ECTtAejfrTha8E/fQ9sHdfUsCw5VRA2mesG5iuS2/nm9yW06Ij2LhCM5t38/0z7pZ/duxQ+uZZrRKtQZf9cCHS5NmOXu6stGdYuWh2jAJ4dM98UxuJcBpwahZbEoboOxYYjdwXzoiU0xEJMhdb4zoz/C9RVNDtyWjhxL5xoFXTeT/ISQnYPRAP/e2L6Qv1bwoh9UVfGnDCb7HSRaB/0k1J4scoKwqLKA8jq+clf3PWOnoxDJ2s/skD84NkCCbyEj1RkGDgm5yoWqm1eGLSORz+TxXuvutulHqSxtD/c8wv2xV+JII5NnO40aLH+dZ/sUxiD5Wf1YoWOtbyt+xBb7AfOa3MZtGfh2Xo38qiTUgbU9b+UUvp9m0LrIGCi6CnDTgtv8brOULfbx4s/iOKc3tCWoIps1KrFOqvbouBJ6R1i+FFhI7dKvXLR6/z/iYT1u6lbE/1SS91PIfBIztpPxEnDfQ6tlmP259fXx019qfnBs6R4A1gBWatt1RXsW7GSLLc1I8SDq5XOGYgWBMN+s0M+uduj5NoMqvmDnoIa9pLQwOn8ksDaSYMAXU9lBdDSJhQLahH9F7FPqgFJ0xlwOXrplQfw3031WbS9Ln3iac+nAQE3sGdYnrYI3nvncdEK4s/xbzr4uaEwjTKVJsuHK2aze0l9NhvxuBCa7RUYIozwhuydRCUVYJ7mFftlxoJnS2O5AX9A7eAxuiwmYqNZWeF+hz3xowBd3qRpLYhdDO2Yxhh8a8QF91U6FzE5jx6p235plZAv75isYv7ShM38cAOuMX4XJUQVkqfyie6+ojIjUuC0dR+OcCx5RR78KjyCB/bMCAkGZvQ4O+ZKsGSx1l8Zbp9Fun8JGmXz7u4ccwC5CYpt+ZiWOpq0OLz06VJikhtP+ZRDgfjEH9z/zKNE59NuVxiMC5cIrnMOIeigQHmwnyc9WXlotTpPns2cgz1TY+Ngs7C8R2f9XKq32uaC+MX55qtvcWxKOGrWw9Go8/EptKLOp7bphxC9v4="
                },
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                }
              },
              "description_text" : "Реализовать класс `Date` три метода, которые будут выполнять проверку\nправильности даты, введенную пользователем.\n\nКакие методы оставить методами класса, какие сделать методами класса или статическими выберите сами.  \nОбоснуйте свой выбор методов.",
              "description_format" : "MD",
              "task_type" : "theory"
            }
          ],
          "type" : "lesson"
        },
        {
          "id" : 834202,
          "title" : "Лабораторная 2",
          "task_list" : [
            {
              "id" : 3492700,
              "name" : "Класс Book",
              "files" : {
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                },
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [
                    {
                      "offset" : 188,
                      "length" : 26,
                      "possible_answer" : "kk6XhBMgXuAJt9luRn9AsoWczDb0NTWVTQ0aySa5UV4=",
                      "placeholder_text" : "# TODO написать класс Book"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "GDqvHbNTriFeeM+6D5MWLDo4cfQQjJXc0aiAZxYjo/fOjYvSTYjnuZt/4xX5iTQ9jAiBR0s32MK82fA3S+sbGGhTkSeqR3ErnYyxawnIr03cSuKUnz0PaMgZrCnxMG5OHhU1cEY4AWifQ0IV4UtNPYLpx6gJUz62OuIzKUAR0R1QYT8m9a7CTeM25CyrCQxsuyFiP2G3ZuQDklBbUZOaoiWfancnWNNkV0r8ReefJz8noHVDMx2HOnpsxFR/pPZOUoAVcVKMD8xUw999YSsFxkFwsrggCwom3cehEMsZqadD3yAJtXvYB501Rs7AIfY0lfqysh5s2jwfv8hriomaFNprQUSTLFekvtHHJOpPO8zqt/YgSy4FYGw68vmaOiLUbeTsVWsyCKjKHiqXpWlR1ebc9T+mxRlg3P7tCKHXfgqhjyQdUI5sGQ/ibuQ6wmNiF3zMX7xFiu7kP/RJQThP+rSdttO5uo17dRllzbgVGfO5w/Vf9Ia3DKnv2GuUPS5ADIeXQ2cbBJ/98PRIdACNz+UXKLuBlL91VIefF+DOzAh8PD46a4HVsv4Cw+7Jkg0x66D6yqJWnmkmQgyuPoSSwgR2UMNfhl/Ydyqag+K/Gge8SeWPOQG87s0jRjJG5jkxffWmJkkKdOQ0qvtKDRcbzdo18y6oraeuYy30sjkl2ZGrk1HiEci1CZ2pDfL4Tmktk6s4nDZVsYfa0ImDsBmBrZmQCWHycV+Um9ZjxIICydtfrHzCpr6jPbkwnZR4jDrl9Sf2WBx9APk0EhieSKNzuNDeStpqPC6BasELmazXkAOwofYBF5GF9D8NdoL+7udm"
                },
                "tests/output.txt" : {
                  "name" : "tests/output.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "FcW9tUCcEqPJj9HgzW56f5O1mTN5NhTwcqLN9U12tBnCMQ6j+2gHik0bqKcQrUve3W1pJqUKwVpa6ggPa6u/ni0x0fJv4zf11Kc0L2ozyuB6iXlyy0yqvI0LuKGEloDcZM0gJmXgiX7+Tg7AMBPl0PQF4V5HBxsi0CsWd2vUrZ7en9EbGjDMMCuxhdIHNVV0"
                }
              },
              "description_text" : "1. Написать класс `Book`, конструктор которого будет инициализировать следующие атрибуты:\n    - `id` - идентификатор книги\n    - `name` - Название книги\n    - `pages` - Количество страниц в книге\n\n1. В классе должен быть объявлен метод `__str__`.  \n    Метод `__str__` должен возвращать строку формата, где \"название_книги\" берется с помощью атрибута `name`:\n    ```text\n    Книга \"название_книги\"\n    ```\n\n1. В классе должен быть объявлен метод `__repr__`.  \n    Метод `__repr__` должен возвращать валидную python строку, по которой можно инициализировать точно такой же экземпляр.\n    ```text\n    Book(id_=1, name='test_name_1', pages=200)\n    ```\n",
              "description_format" : "MD",
              "task_type" : "output"
            },
            {
              "id" : 3492701,
              "name" : "Класс Library",
              "files" : {
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                },
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [
                    {
                      "offset" : 188,
                      "length" : 26,
                      "dependency" : {
                        "section" : "Атрибуты и методы",
                        "lesson" : "Лабораторная 2",
                        "task" : "Класс Book",
                        "file" : "main.py",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "kk6XhBMgXuAJt9luRn9AsoWczDb0NTWVTQ0aySa5UV4=",
                      "placeholder_text" : "# TODO написать класс Book"
                    },
                    {
                      "offset" : 217,
                      "length" : 29,
                      "possible_answer" : "a8QnvyMa7iqd1RvlHTBYfEDcAPic7KO4YNkXIKZ5UnI=",
                      "placeholder_text" : "# TODO написать класс Library"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "GDqvHbNTriFeeM+6D5MWLDo4cfQQjJXc0aiAZxYjo/fOjYvSTYjnuZt/4xX5iTQ9jAiBR0s32MK82fA3S+sbGGhTkSeqR3ErnYyxawnIr03cSuKUnz0PaMgZrCnxMG5OHhU1cEY4AWifQ0IV4UtNPYLpx6gJUz62OuIzKUAR0R1QYT8m9a7CTeM25CyrCQxsuyFiP2G3ZuQDklBbUZOaoiWfancnWNNkV0r8ReefJz8noHVDMx2HOnpsxFR/pPZOUoAVcVKMD8xUw999YSsFxkFwsrggCwom3cehEMsZqacjiEwxQMUOdp4+eNvTVJi1ZGIuUKaeVSlOpQs7jjXpcGb4Y6V5sCZJfDzFJt1wv4/hT4FOZsQHlrslhD2Irf0xqHG6AhF5zHAOWc6BEd+hLKdyFbTBVgCHmmM67G+XNobNxGshOs+dzeq6sEsZ5XPgJTLbHmukxLwHVt9QtncKqH9omZgWRNht6IcIdFnWhLOyGr++sByLfSYFezn9TImJC25XAfVbcElTlWl4g+3Lc4XqmRYO2byqYTVuMDj9LRrhqwYGcP49BNzKVs1B3DPIr/q/TxNH9X9OIqmFeT0qMxkAdXBhrf1bfrL4iOTiMs/agZDlwFoMl2drusSaXhuyyhTOQW/LvYZ2NQugBOEMVp/Zd69y/inIFHAul0QIrT6cjp1sD9rzyQhLqbs7Suuoa6zj1nKQvlsi6HuCR96VPZIdaiOtKX5mC3AkI7BDwBL2X6BUSOKgAIWCeNjBzBCM8TVinjawu7tryK4v0CSXRCLfmscHGsrHFkNnS9rmI7tUCo9hEcaVSTs7Hp+0R/myDWwzqDZ/Ajxx9bWJvTaySM29KnJBTKYj0EWMpALKDn5T4IX0koW8rFuBY2lDc9zqX5zDnVYR7z8NVWDFNfb2yvuco3VCmwyJw+jBGeFv0det/ec7q5CBc76blADhhnCXl1a56VVkwibFT1SPCJAcHB4j3ZtZXUj4OWhRjsCRX1IoA1Ed0qLSYDSBiT8KOJuwUVpkfgLdFQYtbHvF9EGycXvBNVr5GkAC6SzAkm+Wr2aubqSaFOXW4ew2m2g9qN6U15hdU5HCi+eg3cbIgp9wYJyu8bJqTyr5HKdb0CSjkb/DlJTJpCfqWBZ4q4hblFkx4txYGyDXpL0N9T+rON48wJx0o2M3ofXsvdI8qDBJxZE6ivq20GgfvPWAzVlj3L+tvAdG1wSNtYJ3IHfNwVRkdEvTtWFAi/AtSYbL5Aprf5j91q1NfzWfKxSiJCaQFl5d3PdSNTKLX7SDNyPWS8ujr3jp10nkbiiewFlqcVNDtZa9yPrDWihquO9lzCUnFdaD2aJUXACHt9sjREbibvGkfxHMyje/7CbVdcABue9rAQx0pp5Ak9a8HyNjHqXl5Tf7"
                },
                "tests/output.txt" : {
                  "name" : "tests/output.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "nFN1ZyUb2pLkBp9Kxb5OPg=="
                }
              },
              "description_text" : "1. Написать класс `Library`, конструктор которого будет инициализировать следующие атрибуты:\n    - `books` - Список книг\n    \n    Конструктор должен принимать необязательный аргумент со значением по умолчанию. \n      Если пользователь его не передал, то библиотека инициализируется с пустым списком книг.\n   \n1. В классе должен быть объявлен метод `get_next_book_id`.  \n   Метод, возвращающий идентификатор для добавления новой книги в библиотеку.  \n   Если книг в библиотеке нет, то вернуть 1.  \n   Если книги есть, то вернуть идентификатор последней книги увеличенный на 1.\n\n1. В классе должен быть объявлен метод `get_index_by_book_id`.  \n   Метод, возвращающий индекс книги в списке, который хранится в атрибуте экземпляра класса.  \n   Если книга существует, то вернуть индекс из списка.  \n   Если книги нет, то вызвать ошибку ValueError с сообщением: \"Книги с запрашиваемым id не существует\"\n\n\n<div class=\"hint\">\n  В конструкторе класса Library для аргумента books используйте аргумент по умолчанию\n</div>\n<div class=\"hint\">\n  Вспомните какая встроенная функция, умеет возвращать пары индекс-значение от последовательности.\n</div>\n",
              "description_format" : "MD",
              "task_type" : "output"
            }
          ],
          "type" : "framework"
        }
      ],
      "type" : "section"
    },
    {
      "id" : 278020,
      "title" : "Инкапсуляция, наследование, полиморфизм",
      "items" : [
        {
          "id" : 834203,
          "title" : "Практические задания",
          "task_list" : [
            {
              "id" : 3492702,
              "name" : "task1_Figure_super",
              "files" : {
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [
                    {
                      "offset" : 202,
                      "length" : 58,
                      "possible_answer" : "mxpzyISYhAmXkQGcfnB6LEfUYWTGeOwAoiAVkhAerr0=",
                      "placeholder_text" : "# TODO вызвать конструктор базового класса с помощью super"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "McjljwYR+SKira2SqnfmOxeTlM4YyiJjuAIJ3E2fPpyW9HhCxpPx0GObDdt4SLQbiFEuvEa1z2VV2s3CJSQAgs2uWp+5icjfxcQcBWcP/D4uFeyReiwrfUJambMxf356SmKz3M0R9u+sAr2c/1buBcLHSLqeFg2dFaCwl6oRM2w2OJBXGcdCoy/vz0V0z1TT6w1NmDPjcTxB7vNxB5t1DhSJNd9f/AVpuEAxquDhwTVX2Bm5h2SwdoKrrOC24DMWiK8nrmJTDW+srmS6kkAZPxBvDw4pR8oj12D014x47CSn0p5q50XJv2YWr852fFi60+k19RKH9EfeYrRBUZ2xEzlch9Rn3QjUb4FWTLHJgaCp1vESHDSmLVIBgJ+Ep7qCxqydGQWlXQlbT68YoI87FqGjsgx4FMk+hByY1BNNnAyBZpOT71a9QkT2QWWgCDxoUTd1njacIiBDSvi56A9xiLK+TnDUlr7s+2MH598wDM1vmY7B3+VtwOCwVkMT8VKEP3IgLcB5vbQLrEK1GJKpdugB5xw9VnkfZ+7H7p2jAZyY2xFfA6G0nQ51DEB0Mrl3"
                },
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                },
                "tests/output.txt" : {
                  "name" : "tests/output.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "CWtPqI2plTfYctS3OBOcjQ=="
                }
              },
              "description_text" : "Дан базовый класс `Figure` в нём присутствует атрибут `name` и метод `print_name`,\nкоторый печатает этот атрибут.\n\nКласс `Rectangle` является производным классом от класса `Figure`, следовательно, в нем\nунаследованы все методы базового класса.\n\nВ производном классе переопределен конструктор, необходимо сделать так, чтобы\nатрибуты базового класса были доступны в производном.\n",
              "description_format" : "MD",
              "task_type" : "output"
            },
            {
              "id" : 3492703,
              "name" : "task2_Figure_polymorphism_inheritance",
              "files" : {
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [
                    {
                      "offset" : 238,
                      "length" : 59,
                      "possible_answer" : "/gP2prjhqeAQSoGYZ02odu6pRbcRhw9TLUn1xrMxXQg0MZ//WfQ2BQrJyttgmXB9C9eHWaHvEG7620UPUkyr0HwJd4jbC1Up/ID4nkrRCY9jPZPNCr5i3R9E1PTrgWL1ZpccWFUlQQaWVWcYpGS3cjkP9XWUVoxmlJzrb+bWWWnJkUs+YvCamJ9VR9TdGwZgQbiC++YeD5Pbk96jvw/zkrrXGxkceSUF9k+TDxNOjp21GcejRGgIWcQOmqG6aUYryl4z3qiL2pWWdWdVllFwSw==",
                      "placeholder_text" : "...  # TODO определить конструктор и перегрузить метод area"
                    },
                    {
                      "offset" : 364,
                      "length" : 59,
                      "possible_answer" : "/gP2prjhqeAQSoGYZ02odjH0punS9aApwa1zSlNB1U/5tCuUH36S5fnb1PJvjAkGvVqI/l7Olh164hhJBuCZreZop/+cWZWag1hO/vsLDwTp+W91H/9AO/P9obNZI+pXg0dEOM9fV0UEprr3q9AXGO6Qd4XfD6UwgHzFQRRbNLypo+WDa6l54ZlvUSzblhmCsg8J4Zu3pIi6sL3O/Ubcgo6Jq0Lhz71HUifwAJZhL7zU7RUCmG/KL8wtanZX5X2G",
                      "placeholder_text" : "...  # TODO определить конструктор и перегрузить метод area"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "lAlPuuBYzpUeTc2R2ddhk9ocOi8WS6kOsTCguhEhs8lpJGkjja0uIBfR42F1aKcrph8CItcZ6H3w5roRLk74RRStXAL/uGxyiRxZmzgJ1fJ5AggmYw3sLiwfcyL+oCLGXapniLL4iDytkDtHfbxdSIvh6q2qs7olAFVu6uUdxE0j06yqrzDeN1tONS0m4xPcSuYGCBg2jAuQ4t7f/E1IeLSwge0xsfhGqPIgXeHzOSe3s9AxOJ3QOHgT18lAm0dyzZilK9/diGMS4jOBL1r+vlwx2N665ETgq3KUH1AflI/NY5UXHIpfGq+d1oDaQhSoi9CpnorfRiP4GMF230Qr3t41jha1SebN3qMnH+RJFl7R0ciF7XMQoTq29tXtu7T242MnTNjM/KyzYsRgAGXagu55M+kcbj07gUhDPTU8oW6WMeD4f//QmNMBP9VUJ3ckRTT0rKteBW6m3WeBlihkpF6ddcB3N6xETtIamac87AAcxqqIlOvz9TUtF7n9IOftTwLkpoRgzdqNuPRkOLbSDQTi9Gmr3QBRsNVmi/LTeGwvLNnzgYZ7+OsieaWeOzcF878o9iSwsb/TqVpP6DoWqIU+MRCWFYAqxBTSQrBLAHxbW4EKPGoz24oWmNZ3rjrcYzU9v8v6LhcHl+eGLlOqHnrt5nco8thouJ0me2QP9+/wcRscwnnnlA99Y5wtikgGErBRAd9mmvkQKKZhMd2g1jT7iYoxwwcp9Gi7zN4fN5qRGhfqHz3yt090YT2xj1PxmBLOMHVNUA4PoaPL+C6vp22SCxmTSsoio02asoxjBfldvjoCinJoRQ/4gUyV/tGBC5rOSLWr3b/jcWoMZFcAocGgnLDU/u1e8mOB0ie1mJgED4TI/9gsLkXpxPNDN5r8gROPyziVJ4968IYwqYqXDjp6Ki9OX4WmUUC4A4AWqkamWR1RfDsALuGc/HrEOpYeNRq4Yg7SJB/EQlLHGsHlTw=="
                },
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                },
                "tests/output.txt" : {
                  "name" : "tests/output.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "hvYCGdpL/AkxwClNxT3VQXC5GS+iO0WVwgTpccDGeXBJ8+zre74RD/zxTZ5bnc0TkMqpe05v1ZLToa1objU3bn45aa/iFfoFdU6vIDmFJSf8bc5+ayGn4JoSwbncOfaz28yhBfyuNZzZDzIyLbkiM/GZySSRrOLyKIiNug/LgvPMY4DB2pxW93tHBTIeR3ts"
                }
              },
              "description_text" : "Дан базовый класс `Figure` в нём присутствует метод `area`,\nкоторый должен считать площадь.\n\nДля классов `Rectangle` и `Circle`, которые являются производными от класса `Figure`,\nперегрузить конструктор и метод `area`, чтобы производные классы считали площади по своим формулам.\n\nТак как в базовом классе не был определен конструктор, то вызывать конструктор в производном классе не нужно.\n\nКаждый метод `area` в производном классе должен печатать строку:\n```python\nprint(f\"Вызван метод класса {self.__class__.__name__}\")\n```\n",
              "description_format" : "MD",
              "task_type" : "output"
            },
            {
              "id" : 3492704,
              "name" : "task3_Figure_polymorphism_with_super",
              "files" : {
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [
                    {
                      "offset" : 388,
                      "length" : 62,
                      "possible_answer" : "pQuBO0+us8d/sLVw6FKMLw==",
                      "placeholder_text" : "...  # TODO c помощью super вызвать метод area базового класса"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "9/V0BXoOGIWJ81l4bbXQ0els182FzxjSN6XziD5HIhj68qBLlxYrD+U9uYGN5fRTcJHAt006n4qK+2J4OJY+ZSLKRLd1QbyOGURDQwgTjNz40ADlbNissyuX2ZxKltB5ItwUGwVo1zCduXgqxF1LIAzFH8oNuEXoNx7N8w6nPNVnpu3lDKW1m55P571f8GJspkkRM4i4rQPlJbxQdQwLTBNpWOo53z5KoK8l3XPE4FaXhE0elJcp46562r4Ka7vCqSayDMi9hTSqruhokGs5kG9bQ6XocL34uiRfMaBKoEDJn+ZuF0L28W3sPXNjeroaddSeXeloZwBXfCoB9QpN/wuKCJO3BUbt14QHkNGeRXWWjrwxBZQIWmEBN6gHLydfZcJXOtibB+0eEa8oCuti4jpv7PUKFA0ur619M7yuRIAw3jP/RQkMZeCMILAriUdH790pOxqdm/uuhbZ1RcX6jGryDWxlWrhvqiPf03gBCKDUhm+DG272W3mPi1+aW9ZduiF34KDCgqHWupvt5ERV26/9XCH4v4HTN8JlRp4OoQeQJbosv32VNXsk5tnF9ui1z/y+FXJST4zsySHQeIsy5TXGHOPPkk0vY3tnyUJXHx+rpJusF8V9vvj/RoDJowRgDKUUAjgwZfxM1QpMZxqSmtvxxY8LQtKgDCqr7UMHdJPNHdEZttA9Hjjg9cNiUzOpVPEuS/wwTTapb2JgmUb7u80pQHQf9fTKiDOsnqWS7hb1a4gfm1i5mWb0b9+NNk79mDrgIUmGAujOfiUO3P16J9sknpiFj5V2hgvOpz2wtDiYD231hpnfFqS/9OkQ9wiVyxApjbEutv58Kqyw2NAGpsDRRkEMvi1ovHSLjyP2X1pqZuRwlsHH1rZqsI2LVHsCWEHYkK5nMZX5WUrDkJVloNGm/gfKuf30K2Zpj3sdrs7/pUCxpb98AhNTbcM1hrVGkHZgIOR0NrjKob1VteYh3CpMQdZiWpxkislT09avP5EwvQrGSDIaRZ9+FJZZNSZPSER9w6vQ9BeR22IdiKHq8Q=="
                },
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                },
                "tests/output.txt" : {
                  "name" : "tests/output.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "i0cdiwqUSLtnSiw+CS1rBauRvvleoXnQL/VML+jkEn4="
                }
              },
              "description_text" : "Есть базовый класс `Rectangle`, в котором определен метод подсчета площади.\nЕдиницы расчета данного класса метры.\n\nВас попросили сделать такой \"прямоугольник\", который будет принимать размеры в метрических единицах, \nа площадь вычислять в футах.\n\nПерегрузите метод `area` в новом производном классе `RectangleFoot`, чтобы он \nвыдавал площадь в футах.\n",
              "description_format" : "MD",
              "task_type" : "output"
            },
            {
              "id" : 3492705,
              "name" : "task4_Date_property",
              "files" : {
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [
                    {
                      "offset" : 424,
                      "length" : 88,
                      "possible_answer" : "pwFbB9Hx7bc+hT8laMyVFEXr085EEr+yztzNh6a83omXk3C78fXJlUNe7Lh43bROOb07ENPKp/MGy+XqlLgMdw==",
                      "placeholder_text" : "# TODO какой декоратор следует применить?\n    def is_leap_year(self, year: int) -> bool:"
                    },
                    {
                      "offset" : 573,
                      "length" : 54,
                      "possible_answer" : "OFjBSq/iYbk1ctgqdIHM1WmdfmB4Ae8hiqDC0CSJe6J1Hv4yKfSCGZ/AGV1skz/40vLXwwbuGAstvJ+RbEOESYm7YgfYoBLKCgIDK1bWJEVeNANs0pR4voLReKf/vfBLBHERfkjFgIIwSJ+HF3SXYg==",
                      "placeholder_text" : "...  # TODO записать условие проверки високосного года"
                    },
                    {
                      "offset" : 777,
                      "length" : 53,
                      "possible_answer" : "mPYVPdDBqKZsYD7n7XBr1DtL6QmDlhBps9dJa1Ycu5wMhABxBOIWKW1rwAvOjQAjPVtvbhvXX2mO5yUJ4zHUHL9EYFpKDykNtLoVtrFlt+3XeTnfRDYMw3LWLWdhH4gXsAozST7y6c/2kJpLp7VIiTcSeXpyyJTzDgad0CoLG8EiOgg0fa7LQj5gGGu1bmD+IGJVnuYDNj0wpsEc1RFUpA==",
                      "placeholder_text" : "...  # TODO вернуть количество дней указанного месяца"
                    },
                    {
                      "offset" : 963,
                      "length" : 88,
                      "possible_answer" : "VotRQo8FGGxIUiSnU6/EvSX88TE7D0uABDEPtcGINB0pgd5khvK1wvDvgWIMLWnesI3ZS0HZ+SUn56LJ8/1mHum9cvUjolctFZFbNFzlQwk=",
                      "placeholder_text" : "...  # TODO если указанный набор день, месяц и год неверны, то вызвать ошибку ValueError"
                    },
                    {
                      "offset" : 1057,
                      "length" : 39,
                      "possible_answer" : "6MRPJsZejYSqat75UbQ3WlVHMzvctw3FDOpdnPcoytCmo8SSwBENC5EdXMvtgQYCLPvq5LpkKYeB4FTVAiQUQ/RLeSo8c8vU/xZpEpmV0Vn2EUe2U7ZU+40OADLGAITPkFjSAyyeb34XjYhh6KcbvEyqsc4+Yt1COKekFdw0XBMFtQVeZtM0nYhuGYmjRXxE0yK4hXOuuFSKrwT51jesQcc7ArpXTvjdUHdJEf9o6frp70iWMokSaNswGNsG3MRL9ay8mTXYTg1y8TxPDjDa0kaT1AJe1ZUPSQi42gO2xjcIfOi+pC835mk5StoqBLavSt4YrebJZr5ZtEZGt6pAkg/QivKgzGGN5/o0ouB8B4M=",
                      "placeholder_text" : "# TODO записать getter и setter для дня"
                    },
                    {
                      "offset" : 1102,
                      "length" : 42,
                      "possible_answer" : "6MRPJsZejYSqat75UbQ3WmKbaeOZbfMMYMi31g14FMBSnhNxuhWM6qHVDqbuZE4a7+GemWAXby+CxIkGqt1mrIGkgo8bvDILlS6tN4HYtJCFdlo0Ke4Q12zgBZe3X4jGQEI7kupm4fEhybWVr0LqBbKXDPDEivADcDvVpKtgnDjIJfppTSguzR9GFWtY+FypUIWN73aVxdSNBYOSpIZCEL4hrYe0DxoLaIxHhHPC6ZUIx8Ix7D/tCJRSdTGpJH1lvEI1fildjGeO0SKfx1MFj1pYuOSPI2CSV164sA1GOZiIVDffbDij9zRBGEPwz6AasHP6GCEjdkjOk4KU9mmYx0IsGLeCRn/G85cIyqlad/fOR2HRCZJg3M24d0frKmBJ",
                      "placeholder_text" : "# TODO записать getter и setter для месяца"
                    },
                    {
                      "offset" : 1150,
                      "length" : 40,
                      "possible_answer" : "6MRPJsZejYSqat75UbQ3WvzVuWHSv8HYL+EHWIQwWOBicxb11Khdvp9K8Mrh8kkcWwJhI0cDryA87tpMnk10jHBjm0790qVZfaPrvzamtlCUy8Jw7OfwueTd4SJzt/tflmiSvb+kBE/3hDM3Vev+3UJLp/p0IT0lKZy50hL7hKSqxfWT04kB2Sp0q/IloJZLJvpwUXvu0lWYSJt9CWsfqfKOFbexNZIMKoVbf8Y9Pef65WWzM6G292XgtZWP+dsP0ENODr3j7/G7e+0B6akNjf9VqRb9KJT5ZJyC7CWXMD/zh1J8F0Kv37JvLJcl49PjM2evZ54T3ylXpUXz7Eah5e7sjzUr/G7wWi46rTw4gGE=",
                      "placeholder_text" : "# TODO записать getter и setter для года"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "/GtpIvOsP7R5DTr/tFGyq315ApeeA2bs8//jHWcu95M6u60VUsIt4KhtYBjF6iDK0wqVezL/zeXpONwdr8QWgP5aS1oYtOHeuruA8jGy54R8mlEvGnuLVh15HYHLPwl6R1+tD8t1kHbSfpMbhOj+yRaNTMUShgzm0Et0gl91EJ4HpvBJfjFfUio4+lk2LtmjBAGISqPj8UD8GnHvWFl4qVawPBD6vpYdjGrvvlry1PlbRTsnAQBbnNX5pwaBZ3/XvvhDGaoc5n51+myfbBCTrh8tQklpAQral9lyYZlxFOV2+NwkY0U6dncpG9afGPxM4bMVWb2PbSbwuZANDmYOQVcjpzL5cfbaL2FwE6uuVzsZcZM9xyz7Oi39aS0mdgcLoIzxzQIxltFmTiPxTGSfKDxZtbz9G2Dv9j4o4dgjulDb4N7+GecFr0FLwxNhBvqDgUsJ2mrot2NcfuDRVYh2NWBk+kJvvgf4patPHF2nrfIcwU11qOainh/Ua/SMWrQkp/o+KnYJDZxV/+CtkHIO6TGXL8LnsCjy17fLlKk1FqTnWq1ZtZQ21v8Lq2aW+oT/eQm3vtSnkjiQ+CPvfDBX60JaC/kRNCebjpaxJTqJGvxbPEedXJytWxAS/2sXIu98NO4z4V5shlsKBwmzMUi1Jmrx2CJgz/RE7y1R0gnKLhPXYpYg1PFr6ZOBo3wc5h0h+xElEUJffFw2O5aIyp6g7kYo0JNOz1WroEED0X0OvNn06kiqeK8KrzED2DS3MUKz3tRv+UtnDcO1h9rLj3lZ+sKXK6zH70QimWkdSzi6j48WRZ/6kFuLAy2uGRIjlHAHkMdZNNkSaUwnqQn8h1hJgn6k3vkP7SplQmFr5zixr3IoD2OtVdkHLsvkXKv0fbXRWKQof34X5tMsqco5TTjLEuXk2zNR7NpEZ0O0pvAuPHaylyoc/wBBRLL2K0hJCjbUBeNtTXv02hgCESGUqODZNGW2lMf0J9AIEvKQLwUeWDquj3y+4WWxCEakER0VtkJyjCwUy+UNCqZ9qDtD9VW0sUm15XSh5BK5PH6kNECAuLW+6aVbGtRR8k3mlO4VbR5X7s9ErtujNKfsxUnud9oaaAtRDj1rHEn9JDKi39FzPPkcUtN/xPiQ135P5NYAXJGnpPGdhf70lXdt+Wwu66SdGUGRbQSA4HwfICnmiP4l/mwgdvSzdx7LqpBkfRSna+kfEc50Uetv/PbAibskdxQ8gHDPXsztnrTf9Ra5zAftuSIvvhIj+CSpWksLzDEbp6apibky49TjitoPjYDrPvPqlwbEQceW4s25bjtVJ5sVmp5wHgIBP5lzPgU2c4Saxofqq553CtCq0oSL42crlbCAn/Rho3zKmQRayBG1wQBkKCV8ZlYqyOCDXJ70Np+movqXxFeXgvQgbofozeO/sAT8k/fhUzhP3208uZqET0SdBGbawJyfSzlF2gywDTGYJVDdAalZRA8UOROvPJ2ZThli8hjIelTOM6Thhtiw9D6HGatlaU5drpMH5YUSzC2wyCoXz+UQ2Hg4rgCF6x9Cg1AgOk0wguz7fxhuwQRT8lwlZDfsyLMnzMmtn50y2KWTcTnh6yQ68DEE0BBymm9814xEAbnT0tuQD29Tfj3a/b9ZKEPxqfiMHWZxkWJGR5soE4YJ0rUI2aWN5LXF+mRFRQnPkUyhzyMda4WTHkJLu/U6p65QAkxFKYIsfTYRDLXRzhimfHBjfb/vNwIcDwxICmS8zCTzOkoE0QcARCP9EbkmyO9G3Fkt+Psa/TipkOGhTeG42VTX15yDEge9Dain0opc7JzvV7XhcLucCqHLx2zNNdzI77hzMNvUPDP5ecIuot8CNeycQ6o+VfdjKPOZBplnHAgBFyWXdzveq6NSx/7RRod51pzHIA4UKTuXjGf+UDVfSmzOXL4GZM9YZN/36tXtHi2pnl5iOWOhUACU/cPQdktzd9Nk24K2BSZtfPf4JilOwuSXxtfVSv+uUK7YAbFPac8PtzDOB3WCI0Ty4mtb/LEWk0+K/X2hH0nF+TvpdVb/BsTL3SI/WMp32nj2tsiaxLROFjrJk7cxOwR4k8+PlPg="
                },
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                }
              },
              "description_text" : "Реализовать для класса `Date` свойства день, месяц и год.\n- Setter дня должен проверять, что значение является целочисленным, положительным и не большим 31 для всех дат.\n- Setter месяца должен проверять, что значение является целочисленным, большим 1 и меньшим 12 для всех дат.\n- Setter года должен проверять, что значение является целочисленным и положительным.\n\nКонструктор должен проверять с помощью метода `is_valid_date`, что сочетание день, месяц и год корректны, \nв противном случае генерировать ошибку `ValueError`.\n",
              "description_format" : "MD",
              "task_type" : "theory"
            }
          ],
          "type" : "lesson"
        },
        {
          "id" : 834204,
          "title" : "Лабораторная 3",
          "task_list" : [
            {
              "id" : 3492706,
              "name" : "task1",
              "files" : {
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "kk6XhBMgXuAJt9luRn9Asj6HmMGpU29zXruacpi6v3vNG8SacZBSOcc8oe1Su0uwKv0bON63PvjBcBAlpYN9qYVtX8f6MJ93NrmTAavVU8PUFJJ2crpnTXVGoIsF2VINWblxlZXJISQNRm3kAeffnmlr5YPwjd42/ztni9vCKHFVAnNiwjL01FMbx1eRelwc2aKToaGT6YQ4ahA320cOxCkL7ko+swluTvLh1uI+7ioZyVydHmghQp+oJ67Gzth9VX44FZMtP2g8rHrkfd2wsH2m2ljP63D0bUhUleLHmXd++EU92WjHNsQrB6KlFZz90xePKRCEpY5uSdqdKMNEaJNC7/zf5+a9Tk34Y9PtnE2u060WZQ80BD2JqgaMJ3X5HzwPx447YFqy46qc9HuoPNBS4jzTzNX0h+YrMxz8HU4AkMuEQJZnMqjWpNsZSDNJ0M/27ldKwPg6ABB8DTaexUWgE+2T1aA39W9DgidNLk7UYKeBBTWYUxR9OYfkD2q02DwUeORiPUpJeNVJ4Gl53mnj8f8GR3c+TYRgKTwYBH9lVEAAL0WlhmUFSNJo9kuRGmpPHhll/BG0FMahJPY3V4jDYyxd+UTcDHsLTyc/zusxlLiNBq6lgxLRtcdgPiixt4c31dehx2ru1cTErtrOzQGYbF9GJN5ewAiAlfGpCUSvH7zHlU7AnswZElFeQSWnYmxhBjwPCIW5DdxGelCW9oMbB+Bj9i8/FgY79AGvuZM98Q+M4Nkfw+JRPqXyd5QN3Hk0jT5j7wwCWEnVrWBtpnF9caZ7RgvvF/opg/ny+ZdH6YGdtKwwWC/gO1kwN6H75NvjLULsP3EVwbZ9ww1lB9ztcHhxQQol11P4aDEnTa5ibb/jLbfrRu/QJlEhSt2IdaiEXLnW8zrdxme/D0gzIx+my4Awh3/+BjQz8kgQyKBX/7a3FsFafduz/9VcrbIJ1dwmtUfyPJ1omZl82hdhbwEb04nwCyOuULPd479L3Re0Wg0DusvgVHPJ4D4lhJAoDPcXCfqE5eiuNO4D6Dal5RER91SNxFIiiplFMKh9F7ZyhNPF1qBWM03KKMV8qUaF3mkpLUGToYa5tUstIBK6TX4D39t/rERGNogto2gHh9KKoQe1KUgjjzjcyR8lKjZC25zWBfIJ5AvGex7/giZekGy2pPX4lp1PsdVm6pNNT4o="
                },
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                }
              },
              "description_text" : "Есть два типа книг - бумажная и аудио.  \nДля всех типов хранения книг у них есть: \n    - название (`name`)\n    - автор (`author`)\n\nУ бумажной книги есть количество страниц (`pages`) целочисленного типа данных.\nУ аудио книги есть её продолжительность (`duration`) как числа с плавающей запятой.\n\n1. Для классов `Book`, `PaperBook`, `AudioBook` примените наследование.\n1. Исходя из кода подумайте когда методы `__str__` и `__repr__` могут быть унаследованы, а когда перегружены в дочерних классах. И исправьте это\n1. Атрибуты `name` и `author` изменяться не могут, поэтому напишите для них свойства, которые не позволят изменять эти атрибуты.\n1. Так как на `pages` и `duration` накладываются ограничения по типу и допустимым значениям, напишите для них свойства с проверками при присвоении им значений.\n",
              "description_format" : "MD",
              "task_type" : "theory"
            }
          ],
          "type" : "lesson"
        }
      ],
      "type" : "section"
    },
    {
      "id" : 278021,
      "title" : "Итоговое задание",
      "items" : [
        {
          "id" : 834205,
          "title" : "Лабораторная 4",
          "task_list" : [
            {
              "id" : 3492707,
              "name" : "task1",
              "files" : {
                "main.py" : {
                  "name" : "main.py",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "eferBCJRUpIZ4ayufvWxuWrBZmK6TKQctwAe5ytqCnkeaFcLE2GBr/ZOfCGo7jXN7CS3Dc7t/FfngtrQTwhODbjb1eEDBzavQG7GYUVnoAc="
                },
                "__init__.py" : {
                  "name" : "__init__.py",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                }
              },
              "description_text" : "## Итоговое задание\n\n1. Выбрать сущности, для которых можно реализовать наследование.  \n    Например:\n    - Автомобили — базовый класс. Легковой и грузовой автомобиль — дочерние классы. \n    - Хвойные деревья — базовый класс. Ель и сосна — дочерние классы. \n    - Социальные сети — базовый класс. VK, Facebook - дочерние классы.\n1. Должны быть реализованы как минимум один базовый и дочерний класс.\n1. В базовом классе должны быть реализованы конструктор `__init__`, магические методы `__str__` и `__repr__`.  \n   В дочернем классе либо унаследовать, либо расширить конструктор базового класса, унаследовать или перегрузить магические методы `__str__` и `__repr__`.. \n1. Количество атрибутов и методов для каждого класса выбираете самостоятельно.\n1. В дочернем классе необходимо унаследовать как минимум один метод и перегрузить один метод (помимо магических методов `__str__` и `__repr__`).  \n   При перегрузке метода обосновать причину, указав её в документации к методу.\n1. Если считаете необходимым, то некоторые атрибуты и методы можно сделать непубличными.  \n   Причину инкапсуляции указать или в виде комментариев для атрибутов или в документации для методов.\n1. Все аргументы и выходные результаты методов должны иметь аннотацию типов.\n1. Для всех классов и методов должна быть написана документация. \n\n## Дополнительно\nСаму реализацию методов писать необязательно.  \nНо если считаете возможным описать как бы работали методы, можно представить их реализацию в виде python кода.\n",
              "description_format" : "MD",
              "task_type" : "theory"
            }
          ],
          "type" : "lesson"
        }
      ],
      "type" : "section"
    }
  ],
  "id" : 129632,
  "update_date" : "Nov 30, 2022 10:18:46 AM",
  "additional_files" : [
    {
      "name" : "Атрибуты и методы/__init__.py",
      "placeholders" : [ ],
      "is_visible" : true,
      "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
    },
    {
      "name" : "Атрибуты и методы/Практические задания/__init__.py",
      "placeholders" : [ ],
      "is_visible" : true,
      "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
    },
    {
      "name" : "Инкапсуляция, наследование, полиморфизм/__init__.py",
      "placeholders" : [ ],
      "is_visible" : true,
      "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
    }
  ],
  "version" : 12,
  "edu_plugin_version" : "2021.9.1-2020.3-2224"
}